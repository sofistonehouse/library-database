/*
 * MainCard.java
 *
 * This is the main card for the GUI.  It is a tabbed pane that display a single
 * pane at a time.  Each pane belongs to a class called ___Pane (e.g. the pane
 * for checking out copies is called CheckoutPane).  The various panes are added 
 * by the calls to addPane() in the constructor for this card.  (To add another 
 * pane to this card, an addPane() call must be added for it.)  Functions that 
 * can be handled by a single pane should be done that way; more complex 
 * functions may require showing an additional card
 *
 */ 

package library.gui;
import library.model.LibraryDatabase;
import javax.swing.JPanel;

/** Main card for the GUI.
 *
 * @author  Russell C. Bjork
 * 
 * MODIFIED BY:
 */
public class MainCard extends javax.swing.JPanel 
{
    /** Creates new form MainCard 
     */
    MainCard() 
    {
        initComponents();
        
        // Add the individual panes associated with the various tabs
                
        theTabbedPane.addTab("Check out", new CheckoutPane());
        theTabbedPane.addTab("Return", new ReturnPane());
        theTabbedPane.addTab("Renew", new RenewalPane());
        theTabbedPane.addTab("Copy Status", new StatusPane());
        theTabbedPane.addTab("Patrons", new PatronPane());
        theTabbedPane.addTab("Collection", new CollectionPane());
   }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        theTabbedPane = new javax.swing.JTabbedPane();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());
        add(theTabbedPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    /** Forward formComponentShown() to the currently selected pane */
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        java.awt.Component currentPane = theTabbedPane.getComponent(theTabbedPane.getSelectedIndex());
        currentPane.dispatchEvent(evt);
    }//GEN-LAST:event_formComponentShown
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane theTabbedPane;
    // End of variables declaration//GEN-END:variables

}
